{"version":3,"sources":["wtp/GameDetail.js","img/pick.gif","wtp/GameList.js","img/gamearts.png","img/wtp.png","wtp/WhatToPlay.js","App.js","reportWebVitals.js","index.js"],"names":["GameDetail","content","description","detail","this","props","platforms","map","platform","name","genres","genre","Card","variant","style","maxWidth","CardMedia","height","image","background_image","title","CardHeader","CardContent","Typography","join","metacritic","playtime","released","dangerouslySetInnerHTML","__html","border","CssBaseline","Component","GameList","state","isLoading","next","previous","results","modalOpen","gameId","error","loadList","url","fetch","then","response","json","data","setState","catch","message","listHandler","skip","id","modalClose","randomPick","resultList","length","myPick","Math","floor","random","prevProps","Container","paddingTop","backgroundColor","Paper","display","justifyContent","alignItems","Button","onClick","src","PickImage","alt","Grid","container","spacing","game","idx","item","CardActionArea","width","Box","IconButton","color","SkipPrevious","SkipNext","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","overflow","Fade","in","WhatToPlay","handlePlatform","parent_platforms","handleGenre","handlePlatformButtonColor","handleGenreButtonColor","handleChange","event","nam","target","val","value","today","Date","toISOString","split","fiveYearsAgo","releasedFrom","releasedTo","scoreFrom","scoreTo","backgroundImage","GameImage","flexDirection","WTPImage","margin","align","TextField","label","type","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57cb8104.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { CssBaseline, Typography, Card, CardHeader, CardMedia, CardContent } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nexport class GameDetail extends Component {\n\n    static propTypes = {\n        detail: PropTypes.object\n    }\n\n    render() {\n        const { detail } = this.props;\n        let content;\n        let description;\n\n        if (detail) {\n            description = detail.description;\n            const platforms = detail.platforms.map((platform) => {\n                return platform.platform.name;\n            })\n            const genres = detail.genres.map((genre) => {\n                return genre.name;\n            })\n            content = (\n                <Card variant=\"outlined\" style={{maxWidth: 500}}>\n                    <CardMedia style={{height: 475}} image={detail.background_image} title={detail.name}/>\n                    <CardHeader title={detail.name} />\n                    <CardContent>\n                        <Typography variant=\"subtitle1\"> <b>Platforms: </b>{platforms.join(\", \")} </Typography>\n                        <Typography variant=\"subtitle1\"> <b>Metascore:</b> {detail.metacritic}</Typography>\n                        <Typography variant=\"subtitle1\"> <b>Genres: </b>{genres.join(\", \")} </Typography>\n                        <Typography variant=\"subtitle1\"> <b>Average Beat Time: </b> {detail.playtime} Hours</Typography>\n                        <Typography variant=\"subtitle1\"> <b>Release Date: </b> {detail.released}</Typography>\n                        <div dangerouslySetInnerHTML={{__html: description}} />\n                    </CardContent>\n                </Card>\n            );\n        }\n\n        return (\n            <div style={{ border: '2px solid white' }}>\n                <CssBaseline />\n                {content}\n            </div>\n        )\n    }\n}\n\nexport default GameDetail\n","export default __webpack_public_path__ + \"static/media/pick.e37dc64c.gif\";","import React, { Component } from 'react'\nimport { CssBaseline, Backdrop, Button, Fade, Container, Card, CardHeader, CardMedia, CardContent, CardActionArea, Modal, Grid, Typography, Box, IconButton, Paper } from '@material-ui/core';\nimport { SkipNext, SkipPrevious } from '@material-ui/icons';\nimport PropTypes from 'prop-types';\nimport GameDetail from './GameDetail';\nimport PickImage from '../img/pick.gif';\n\nexport class GameList extends Component {\n    static propTypes = {\n        url: PropTypes.string.isRequired        \n    }\n\n    state = {\n        isLoading: true,\n        next: null,\n        previous: null,\n        results: [],\n        modalOpen: false,\n        gameId: 3498,\n        detail: null,\n        error: ''\n    }\n\n    componentDidMount() {\n        this.loadList(this.props.url);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.url !== prevProps.url) {\n          this.loadList(this.props.url);\n        }\n      }\n\n    loadList = (url) => {\n        fetch(url)\n            .then(response => response.json())\n            .then(data =>{\n                this.setState({\n                    isLoading: false,\n                    next: data.next,\n                    previous: data.previous,\n                    results: data.results\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoading: false,\n                    error: error.message\n                })\n            });\n    }\n\n    listHandler = (skip) => {\n        this.loadList(skip);\n    }\n\n    modalOpen = (id) => {\n        this.setState({ modalOpen: true, gameId: id });\n        const url = `https://api.rawg.io/api/games/${id}?key=460197e0758e44d889129066624b90d6`\n        fetch(url)\n            .then(response => response.json())\n            .then(data =>{\n                this.setState({\n                    detail: data\n                })\n            })\n    }\n\n    modalClose = () => {\n        this.setState({ modalOpen: false });\n    }\n\n    randomPick = (resultList) => {\n        if (resultList.length > 0){\n            const myPick = resultList[Math.floor(Math.random() * resultList.length)].id;\n            this.modalOpen(myPick);\n        }\n    }\n\n    render() {\n        const {isLoading, next, previous, results, error} = this.state;\n        return (\n            <Container maxWidth=\"lg\" style={{paddingTop: 5, backgroundColor: 'black'}}>\n                <CssBaseline />\n                {isLoading && <Typography variant=\"h4\">Loading...</Typography>}\n                {error && <Typography variant=\"h4\">{error}</Typography>}\n                <Paper style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", backgroundColor: 'black' }}>\n                    <Button onClick={() => this.randomPick(results)}>\n                        <img src={PickImage} alt=\"Pick One For Me!\"/>\n                    </Button>\n                </Paper>\n                <Grid container spacing={1}>\n                    {results.map((game, idx) => {\n                        const platforms = game.platforms.map((platform) => {\n                            return platform.platform.name;\n                        })\n                        const genres = game.genres.map((genre) => {\n                            return genre.name;\n                        })\n                        return (\n                            <Grid key={idx} item style={{backgroundColor: 'gray'}}>\n                                <Card variant=\"outlined\" style={{maxWidth: 300}}>\n                                    <CardActionArea onClick={() => this.modalOpen(game.id)}>\n                                        <CardMedia style={{width: 300, height: 300}} image={game.background_image}/>\n                                        <CardHeader title={game.name} style={{height: 100}}/>\n                                        <CardContent style={{height: 250, backgroundColor: '#cccccc'}}>\n                                            <Typography variant=\"subtitle1\"> <b>Platforms: </b>{platforms.join(\", \")} </Typography>\n                                            <Typography variant=\"subtitle1\"> <b>Metascore:</b> {game.metacritic}</Typography>\n                                            <Typography variant=\"subtitle1\"> <b>Genres: </b>{genres.join(\", \")} </Typography>\n                                            <Typography variant=\"subtitle1\"> <b>Release Date:</b> {game.released}</Typography>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            </Grid>\n                        );\n                    })}\n                </Grid>\n                <Box display=\"flex\" justifyContent=\"center\">\n                    {previous && <IconButton style={{color: 'white'}} onClick={() => this.listHandler(previous)}><SkipPrevious /> Previous Page</IconButton>}\n                    {next && <IconButton style={{color: 'white'}} onClick={() => this.listHandler(next)}> Next Page<SkipNext /></IconButton>}\n                </Box>\n                <Modal\n                    open={this.state.modalOpen}\n                    onClose={this.modalClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{ timeout: 500 }}\n                    style={{display: 'flex', alignItems: 'center', justifyContent: 'center', overflow: 'scroll'}}\n                >\n                    <div>\n                    <Fade in={this.state.modalOpen}>\n                        <GameDetail detail={this.state.detail}/>\n                    </Fade>\n                    </div>\n                </Modal>\n            </Container>\n        )\n    }\n}\n\nexport default GameList\n","export default __webpack_public_path__ + \"static/media/gamearts.d3d0aa08.png\";","export default __webpack_public_path__ + \"static/media/wtp.db1d38fe.png\";","import React, { Component } from 'react';\nimport GameList from './GameList';\nimport { Box, Paper, TextField, Typography, Button } from '@material-ui/core';\nimport GameImage from '../img/gamearts.png';\nimport WTPImage from '../img/wtp.png';\n\nexport class WhatToPlay extends Component {\n\n    constructor(props) {\n        super(props);\n        const myday = new Date();\n        const today = myday.toISOString().split(\"T\")[0];\n        const fiveYearsAgo = `${today.split(\"-\")[0]-5}-${today.split(\"-\")[1]}-${today.split(\"-\")[2]}`;\n\n        this.state = {\n            isLoading: true,\n            url: 'https://api.rawg.io/api/games?key=460197e0758e44d889129066624b90d6&page_size=40',\n            parent_platforms: '1,2,3',\n            genres: '1,2,3,4,5,6,7,11,15',\n            releasedFrom: fiveYearsAgo,\n            releasedTo: today,\n            scoreFrom: '90',\n            scoreTo: '100',\n            error: ''\n        };\n    }\n\n    handlePlatform = (platform) => {\n        this.setState({ parent_platforms: platform });\n    }\n\n    handleGenre = (genre) => {\n        this.setState({ genres: genre });\n    }\n\n    handlePlatformButtonColor = (platform) => {\n        const color = (this.state.parent_platforms === platform) ? 'secondary' : 'default';\n        return color;\n    }\n\n    handleGenreButtonColor = (genre) => {\n        const color = (this.state.genres === genre) ? 'secondary' : 'default';\n        return color;\n    }\n\n    handleChange = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({ [nam]: val });\n    }\n    \n    render() {\n        const url = `${this.state.url}&parent_platforms=${this.state.parent_platforms}&genres=${this.state.genres}&metacritic=${this.state.scoreFrom},${this.state.scoreTo}&dates=${this.state.releasedFrom},${this.state.releasedTo}`;\n        return (\n            <div>\n                <Paper style={{ backgroundImage: `url(${GameImage})`, height: '300px', display: 'flex', flexDirection: \"column\", justifyContent: 'center' }}>\n                    <img src={WTPImage} alt=\"What To Play\"/>\n                </Paper>\n                <Box display=\"flex\" justifyContent=\"center\" style={{margin: '10px'}} >\n                    <Typography style={{color: 'white', margin: '10px'}} variant=\"h6\">Platforms: </Typography>\n                    <Button variant=\"contained\" color={this.handlePlatformButtonColor('1,2,3')} style={{margin: '10px'}} onClick={() => this.handlePlatform('1,2,3')}>ALL</Button>\n                    <Button variant=\"contained\" color={this.handlePlatformButtonColor('1')} style={{margin: '10px'}} onClick={() => this.handlePlatform('1')}>PC</Button>\n                    <Button variant=\"contained\" color={this.handlePlatformButtonColor('3')} style={{margin: '10px'}} onClick={() => this.handlePlatform('3')}>XBOX</Button>\n                    <Button variant=\"contained\" color={this.handlePlatformButtonColor('2')} style={{margin: '10px'}} onClick={() => this.handlePlatform('2')}>PlayStation</Button>\n                </Box>\n                <Box display=\"flex\" justifyContent=\"center\" style={{margin: '10px'}} >\n                    <Typography style={{color: 'white', margin: '10px'}} variant=\"h6\">Genres: </Typography>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('1,2,3,4,5,6,7,11,15')} style={{margin: '10px'}} onClick={() => this.handleGenre('1,2,3,4,5,6,7,11,15')}>ALL</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('4')} style={{margin: '10px'}} onClick={() => this.handleGenre('4')}>Action</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('3')} style={{margin: '10px'}} onClick={() => this.handleGenre('3')}>Adventure</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('5')} style={{margin: '10px'}} onClick={() => this.handleGenre('5')}>RPG</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('2')} style={{margin: '10px'}} onClick={() => this.handleGenre('2')}>Shooter</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('7')} style={{margin: '10px'}} onClick={() => this.handleGenre('7')}>Puzzle</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('1')} style={{margin: '10px'}} onClick={() => this.handleGenre('1')}>Racing</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('15')} style={{margin: '10px'}} onClick={() => this.handleGenre('15')}>Sports</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('11')} style={{margin: '10px'}} onClick={() => this.handleGenre('11')}>Arcade</Button>\n                    <Button variant=\"contained\" color={this.handleGenreButtonColor('6')} style={{margin: '10px'}} onClick={() => this.handleGenre('6')}>Fighting</Button>\n                </Box>\n                <Typography style={{ backgroundColor: \"grey\" }} align=\"center\" variant=\"h5\">Game Filters</Typography>\n                <Paper style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", backgroundColor: '#cccccc' }}>\n                    <form>\n                        <TextField style={{margin: '10px'}} name=\"releasedFrom\" label=\"Released From\" type=\"date\" value={this.state.releasedFrom} onChange={this.handleChange} variant=\"outlined\"/>\n                        <TextField style={{margin: '10px'}} name=\"releasedTo\" label=\"Released To\" type=\"date\" value={this.state.releasedTo} onChange={this.handleChange} variant=\"outlined\"/>\n                        <TextField style={{margin: '10px'}} name=\"scoreFrom\" label=\"Metascore From\" type=\"number\" value={this.state.scoreFrom} onChange={this.handleChange} variant=\"outlined\"/>\n                        <TextField style={{margin: '10px'}} name=\"scoreTo\" label=\"Metascore To\" type=\"number\" value={this.state.scoreTo} onChange={this.handleChange} variant=\"outlined\"/>\n                    </form>\n                </Paper>\n                <GameList url={url}/>\n            </div>\n        )\n    }\n}\n\nexport default WhatToPlay\n","import './App.css';\nimport WhatToPlay from './wtp/WhatToPlay';\n\nfunction App() {\n  return (\n    <div style={{backgroundColor: 'black'}}>\n      <WhatToPlay />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}